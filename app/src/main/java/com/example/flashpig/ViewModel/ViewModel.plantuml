@startuml

title __VIEWMODEL's Class Diagram__\n

  namespace com.example.flashpig {
    namespace View {
      namespace odel {
        class com.example.flashpig.ViewModel.CardViewModel {
            + cardIsSet()
            + deckIsSet()
            + eraseCards()
            + getCard()
            + getCardPos()
            + getChosenDeck()
            + getDeckName()
            + initCard()
            + initDeck()
            + resetVievModel()
            + saveDeck()
            + setBackImg()
            + setBackStr()
            + setDeckName()
            + setFrontImg()
            + setFrontStr()
        }
      }
    }
  }
  

  namespace com.example.flashpig {
    namespace View {
      namespace odel {
        class com.example.flashpig.ViewModel.DashboardViewModel {
            - amountDecks : MutableLiveData<Integer>
            - chosenDeck : MutableLiveData<Deck>
            - decks : MutableLiveData<ArrayList<Deck>>
            + DashboardViewModel()
            + getAmountDecks()
            + getChosenDeck()
            + getChosenDeckPos()
            + getDecks()
            + removeDeck()
            + saveDeck()
            + setChosenDeck()
        }
      }
    }
  }
  

  namespace com.example.flashpig {
    namespace View {
      namespace odel {
        class com.example.flashpig.ViewModel.EditDeckViewModel {
            + getDb()
            + getDeck()
            + initDeck()
            + setDeck()
            + setDeckName()
        }
      }
    }
  }
  

  namespace com.example.flashpig {
    namespace View {
      namespace odel {
        class com.example.flashpig.ViewModel.FlashcardViewModel {
            - currentCard : MutableLiveData<Card>
            - flashcard : MutableLiveData<Flashcard>
            - gameOver : MutableLiveData<Boolean>
            - hasBackTxtAndImg : boolean
            - hasFrontTxtAndImg : boolean
            + getCurrentCard()
            + getFlashcard()
            + getGameOver()
            + hasBackTxtAndImg()
            + hasFrontTxtAndImg()
            + init()
            + setCardsDifficulty()
            - checkHasBackTxtAndImg()
            - checkHasFrontTxtAndImg()
            - startTimer()
            - update()
        }
      }
    }
  }
  

  namespace com.example.flashpig {
    namespace View {
      namespace odel {
        class com.example.flashpig.ViewModel.PairUpViewModel {
            ~ deckSize : int
            ~ showingCards : int
            - card1 : MutableLiveData<Card>
            - card2 : MutableLiveData<Card>
            - chosenDeck : MutableLiveData<Deck>
            - ifLastPair : MutableLiveData<Boolean>
            - isEndOfGame : MutableLiveData<Boolean>
            - isMatch : MutableLiveData<Boolean>
            - loadNewCards : MutableLiveData<Boolean>
            - pairUp : MutableLiveData<PairUp>
            - setFirstViews : MutableLiveData<Boolean>
            + getCard1()
            + getCard2()
            + getChosenDeck()
            + getDeckSize()
            + getIfLastPair()
            + getIsMatch()
            + getLoadNewCards()
            + getSetFirstViews()
            + init()
            + isEndOfGame()
            + isPair()
            + setCard1()
            + setCard2()
            + setIsMatch()
            - loadNewCards()
            - updateAmountCards()
        }
      }
    }
  }
  

  com.example.flashpig.ViewModel.CardViewModel -up-|> androidx.lifecycle.ViewModel
  com.example.flashpig.ViewModel.CardViewModel o-- com.example.flashpig.Model.Card : card
  com.example.flashpig.ViewModel.CardViewModel o-- com.example.flashpig.Model.Deck : deck
  com.example.flashpig.ViewModel.CardViewModel o-- com.example.flashpig.DataBase.Repository : repo
  com.example.flashpig.ViewModel.DashboardViewModel -up-|> androidx.lifecycle.ViewModel
  com.example.flashpig.ViewModel.DashboardViewModel o-- com.example.flashpig.DataBase.Repository : repo
  com.example.flashpig.ViewModel.EditDeckViewModel -up-|> androidx.lifecycle.ViewModel
  com.example.flashpig.ViewModel.EditDeckViewModel o-- com.example.flashpig.DataBase.FakeDataBase : db
  com.example.flashpig.ViewModel.EditDeckViewModel o-- com.example.flashpig.Model.Deck : deck
  com.example.flashpig.ViewModel.FlashcardViewModel -up-|> androidx.lifecycle.ViewModel
  com.example.flashpig.ViewModel.FlashcardViewModel o-- com.example.flashpig.DataBase.Repository : repo
  com.example.flashpig.ViewModel.PairUpViewModel -up-|> androidx.lifecycle.ViewModel
  com.example.flashpig.ViewModel.PairUpViewModel o-- com.example.flashpig.DataBase.Repository : repo


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
